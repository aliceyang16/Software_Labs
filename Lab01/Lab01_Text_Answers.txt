Alice Yang 597609
Peter Coetzee 453828
Software Development II - Lab01

3. The Complex Type
Why doesn't '//answer++' work?
Since answer is a complex type, due to the usage of auto (auto detects the
variable type of answer and replaces auto with the type), it is invalid to 
increment a complex type by a value of 1, because a complex type contains both 
real and imaginary values. Thus by incrementing a float type by the value of 1,
it becomes ambiguous to the compiler. It must also be noted that the value 1 is 
an integer. If the compiler is capable of converting the value 1 into complex 
form, only then will answer++ be valid. But this will not be the case.

4. Modelling a Screen
Exercise 4.2
screen.pp file:

Line 4: const string::size_type TOP_LEFT = 0;
The const used in line 4 is to initialize the variable TOP_LEFT to a constant 0 value. 
The reason for this is because Line 4 is declared as global variable. Therefore to prevent
other functions (as well as files using the variable) from changing the value in TOP_LEFT,
const must be used.

Line 128: void Screen::set(const string& s)
The const used in line 128 prevents the function set() from altering the value stored in 
variable s, this is because variable s is passed by reference into the function. In passing-
by-reference this means that the original value stored in s is passed into the function. 
Hence const is used to prevent the original value from being altered.

Line 189, 202, 282, 288:
Line 189: void Screen::display() const
The const used in lines 189, 202, 282, 288 prevents the function from altering the values of any
variable used in the function from being altered during the operations performed in the function. 

Exercise 4.5
There is no need to access the internal representation of the Screen class in order to implement
the empty square. The basic functions to create an empty square are already included in the Screen 
class. Should the user whish to create an empty square, it could be done in the main.cpp file.
The existing interface can be used, because the basic functions to create a square is availbe by using
the move() and set() functions. This function does not really form part of the 
responsibilities of the a Screen object, because the function is not necessarily needed as not every user
desires an empty square displayed on the screen. 

Exercise 4.6
Instead of using string for the internal representation, char can be used instead, because there are no
words stored in one block in the screen (regardless of whether a string or character is passed into the
function). 

It is important to avoid changing the class's interface as it provides the base class in which other classes 
inherit from. We are free to change the implementation, because the interface is a seperate file from where 
the implementation of the class. 